{
  "$id": "https://rdmr.eu/sparql-query-runner/schema.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "required": ["version", "jobs"],
  "properties": {
    "version": {
      "type": "string",
      "pattern": "^v5",
      "description": "Version of the sparql-query-runner configuration"
    },
    "jobs": { "$ref": "#/definitions/JobsObject" },
    "prefixes": { "$ref": "#/definitions/PrefixesObject" },
    "$schema": {
      "type": "string",
      "const": "https://rdmr.eu/sparql-query-runner/schema.json"
    }
  },
  "definitions": {
    "PrefixesObject": {
      "type": "object",
      "title": "Prefixes used in the SPARQL queries and result files.",
      "patternProperties": {
        "^[a-zA-Z0-9-_]+$": {
          "type": "string",
          "format": "iri-reference"
        }
      },
      "additionalProperties": false
    },

    "JobsObject": {
      "type": "object",
      "title": "Final targets",
      "description": "A workflow run is made up of one or more jobs, that run consecutively by default.",
      "patternProperties": {
        "^[a-z][a-z0-9-_]{0,127}$": { "$ref": "#/definitions/Job" }
      },
      "additionalProperties": false
    },

    "Job": {
      "type": "object",
      "title": "A workflow job that is executed top-down",
      "properties": {
        "prefixes": {
          "$ref": "#/definitions/PrefixesObject",
          "title": "Prefixes specific to this job"
        },
        "sources": {
          "type": "array",
          "items": { "$ref": "#/definitions/JobSource" }
        },
        "steps": {
          "type": "array",
          "items": { "$ref": "#/definitions/JobStep" }
        },
        "targets": {
          "type": "array",
          "items": { "$ref": "#/definitions/JobTarget" }
        },
        "independent": {
          "description": "Indicate that the job does not depend on a preceding job",
          "type": "boolean",
          "default": false
        }
      }
    },

    "JobSource": {
      "title": "RDF data sources",
      "oneOf": [
        { "$ref": "#/definitions/Parts/Source/File" },
        { "$ref": "#/definitions/Parts/Source/Sparql" },
        { "$ref": "#/definitions/Parts/Source/LacesHub" },
        { "$ref": "#/definitions/Parts/Source/Triplydb" }
      ]
    },
    "JobStep": {
      "title": "Intermediate job steps",
      "oneOf": [
        { "$ref": "#/definitions/Parts/Step/Construct" },
        { "$ref": "#/definitions/Parts/Step/Update" },
        { "$ref": "#/definitions/Parts/Step/Assert" },
        { "$ref": "#/definitions/Parts/Step/Shell" },
        { "$ref": "#/definitions/Parts/Step/Shacl" },
        { "$ref": "#/definitions/Parts/Step/Infer" },
        { "$ref": "#/definitions/Parts/Step/HttpRequest" }
      ]
    },
    "JobTarget": {
      "title": "Export in-mem results",
      "oneOf": [
        { "$ref": "#/definitions/Parts/Target/File" },
        { "$ref": "#/definitions/Parts/Target/SparqlUpdateEndpoint" },
        { "$ref": "#/definitions/Parts/Target/SparqlGraphStore" },
        { "$ref": "#/definitions/Parts/Target/SparqlQuadStore" },
        { "$ref": "#/definitions/Parts/Target/LacesHub" },
        { "$ref": "#/definitions/Parts/Target/Triplydb" }
      ]
    },

    "Options": {
      "WithIntoGraph": {
        "type": "object",
        "properties": { "into-graph": { "$ref": "#/definitions/Options/WithIntoGraph" } }
      },
      "IntoGraph": { "type": "string", "description": "(Option) Override the quads' graph." },
      "WithOnlyGraphs": {
        "type": "object",
        "properties": { "only-graphs": { "$ref": "#/definitions/Options/WithOnlyGraphs" } }
      },
      "OnlyGraphs": {
        "type": "array",
        "items": { "type": "string" },
        "description": "(Option) Limit import (source, step) or output (target) to only these graphs"
      },
      "CredentialsAnyHeader": {
        "type": "object",
        "properties": {
          "type": { "const": "HTTP-Header", "description": "Authentication over any HTTP header" },
          "headers": {
            "type": "object",
            "patternProperties": {
              "\\S+": {
                "type": "string"
              }
            }
          }
        }
      },
      "CredentialsBasic": {
        "type": "object",
        "properties": {
          "type": { "const": "Basic", "description": "HTTP basic authentication" },
          "username": {
            "type": "string",
            "description": "Username required for access"
          },
          "password": {
            "type": "string",
            "description": "Password required for access with username"
          }
        }
      },
      "CredentialsBearer": {
        "type": "object",
        "properties": {
          "type": { "const": "Bearer", "description": "Bearer token authentication" },
          "token": {
            "type": "string",
            "description": "Token required for access"
          }
        }
      },
      "WithCredentials": {
        "type": "object",
        "properties": { "credentials": { "$ref": "#/definitions/Options/Credentials" } }
      },
      "Credentials": {
        "title": "(Optional) Authentication",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Authentication type"
          }
        },
        "oneOf": [
          { "$ref": "#/definitions/Options/CredentialsBasic" },
          { "$ref": "#/definitions/Options/CredentialsBearer" },
          { "$ref": "#/definitions/Options/CredentialsAnyHeader" }
        ]
      },
      "WithSourceType": {
        "type": "object",
        "properties": { "source-type": { "$ref": "#/definitions/Options/SourceType" } }
      },
      "SourceType": {
        "type": "string",
        "description": "(Optional) Instruct Comunica type of source"
      }
    },

    "Parts": {
      "Source": {
        "File": {
          "type": "object",
          "title": "Local or remote RDF file",
          "required": ["file"],
          "properties": {
            "file": { "type": "string", "description": "Path or URL to RDF file" },
            "with": {
              "anyOf": [
                { "$ref": "#/definitions/Options/WithCredentials" },
                { "$ref": "#/definitions/Options/WithOnlyGraphs" },
                { "$ref": "#/definitions/Options/WithIntoGraph" }
              ]
            }
          }
        },
        "LacesHub": {
          "type": "object",
          "title": "Laces Hub dataset",
          "required": ["laces-hub"],
          "properties": {
            "laces-hub": { "type": "string", "description": "URL to Laces dataset" },
            "with": {
              "anyOf": [
                { "$ref": "#/definitions/Options/WithCredentials" },
                { "$ref": "#/definitions/Options/WithOnlyGraphs" },
                { "$ref": "#/definitions/Options/WithIntoGraph" }
              ]
            }
          }
        },
        "Sparql": {
          "type": "object",
          "title": "SPARQL endpoint",
          "required": ["sparql"],
          "properties": {
            "sparql": { "type": "string", "description": "URL to SPARQL endpoint" },
            "with": {
              "anyOf": [
                { "$ref": "#/definitions/Options/WithCredentials" },
                { "$ref": "#/definitions/Options/WithSourceType" }
              ]
            }
          }
        },
        "Triplydb": {
          "type": "object",
          "title": "TriplyDB dataset",
          "required": ["triplydb"],
          "properties": {
            "triplydb": { "type": "string", "description": "URL to TriplyDB dataset" },
            "with": {
              "anyOf": [{ "$ref": "#/definitions/Options/WithCredentials" }]
            }
          }
        }
      },
      "Step": {
        "Construct": {
          "type": "object",
          "title": "SPARQL Construct query",
          "required": ["construct"],
          "properties": {
            "construct": { "type": "string", "description": "Query or path to .rq file" },
            "with": {
              "anyOf": [
                { "$ref": "#/definitions/Options/WithCredentials" },
                { "$ref": "#/definitions/Options/WithOnlyGraphs" },
                { "$ref": "#/definitions/Options/WithIntoGraph" }
              ]
            }
          }
        },
        "Shacl": {
          "type": "object",
          "title": "Validate in-mem dataset with SHACL",
          "required": ["shacl"],
          "properties": {
            "shacl": {
              "type": "string",
              "description": "Path or URL to an RDF file containing SHACL shapes"
            },
            "with": {
              "type": "object",
              "properties": {
                "anyOf": [{ "$ref": "#/definitions/Options/WithOnlyGraphs" }]
              }
            }
          }
        },
        "Shell": {
          "type": "object",
          "title": "Execute CLI (shell) script",
          "required": ["shell"],
          "properties": {
            "shell": {
              "type": "string",
              "description": "CLI / Shell command"
            },
            "with": { "type": "object", "properties": {}, "additionalProperties": false }
          }
        },
        "Assert": {
          "type": "object",
          "title": "SPARQL ASK query",
          "required": ["assert"],
          "properties": {
            "assert": { "type": "string", "description": "Query or path to .rq file" },
            "with": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Message to log if assertion not met"
                }
              }
            }
          }
        },
        "Update": {
          "type": "object",
          "title": "SPARQL Update (DELETE, INSERT, ...)",
          "required": ["update"],
          "properties": {
            "update": { "type": "string", "description": "Query or path to .ru file" },
            "with": { "type": "object", "properties": {}, "additionalProperties": false }
          }
        },
        "Infer": {
          "type": "object",
          "title": "Infer new statements with RDFS or OWL2RL reasoning",
          "required": ["infer"],
          "properties": {
            "infer": {
              "type": "string",
              "description": "(Optional) Path to RDF file with additional RDF facts"
            },
            "with": {
              "type": "object",
              "properties": {
                "ruleset": {
                  "type": "string",
                  "enum": ["owl2rl", "rdfs"]
                }
              }
            }
          }
        },
        "HttpRequest": {
          "type": "object",
          "title": "Execute any HTTP request",
          "required": ["http-request"],
          "properties": {
            "http-request": {
              "type": "string",
              "description": "URL to connect to"
            },
            "with": {
              "type": "object",
              "properties": {
                "destination": {
                  "type": "string",
                  "description": "Path to save request output to"
                },
                "body": {
                  "type": "string",
                  "description": "Contents of request body"
                },
                "body-file": {
                  "type": "string",
                  "description": "Path to file with contents of request body"
                },
                "method": {
                  "type": "string",
                  "enum": ["GET", "POST", "PUT", "PATCH", "DELETE"]
                },
                "headers": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "Target": {
        "File": {
          "type": "object",
          "title": "Export to RDF file",
          "required": ["file"],
          "properties": {
            "file": { "type": "string", "description": "Path or URL" },
            "with": {
              "anyOf": [
                { "$ref": "#/definitions/Options/WithOnlyGraphs" },
                { "$ref": "#/definitions/Options/WithIntoGraph" }
              ]
            }
          }
        },
        "LacesHub": {
          "type": "object",
          "title": "Laces Hub",
          "required": ["sparql-update-endpoint"],
          "properties": {
            "sparql-update-endpoint": {
              "type": "string",
              "description": "URL to a Laces dataset to replace"
            },
            "with": {
              "anyOf": [
                { "$ref": "#/definitions/Options/WithCredentials" },
                { "$ref": "#/definitions/Options/WithOnlyGraphs" },
                { "$ref": "#/definitions/Options/WithIntoGraph" }
              ]
            }
          }
        },
        "SparqlGraphStore": {
          "type": "object",
          "title": "SPARQL Graph Store",
          "required": ["sparql-graph-store"],
          "properties": {
            "sparql-graph-store": {
              "type": "string",
              "description": "URL to a SPARQL Graph Store endpoint"
            },
            "with": {
              "anyOf": [
                { "$ref": "#/definitions/Options/WithCredentials" },
                { "$ref": "#/definitions/Options/WithOnlyGraphs" },
                { "$ref": "#/definitions/Options/WithIntoGraph" }
              ]
            }
          }
        },
        "SparqlQuadStore": {
          "type": "object",
          "title": "SPARQL Quad Store",
          "required": ["sparql-quad-store"],
          "properties": {
            "sparql-quad-store": {
              "type": "string",
              "description": "URL to a SPARQL Quad Store endpoint"
            },
            "with": {
              "anyOf": [
                { "$ref": "#/definitions/Options/WithCredentials" },
                { "$ref": "#/definitions/Options/WithOnlyGraphs" },
                { "$ref": "#/definitions/Options/WithIntoGraph" }
              ]
            }
          }
        },
        "SparqlUpdateEndpoint": {
          "type": "object",
          "title": "Set one SPARQL Update endpoint to send SPARQL Updates to",
          "required": ["laces-hub"],
          "properties": {
            "laces-hub": {
              "type": "string",
              "description": "URL to a SPARQL Update endpoint"
            },
            "with": { "type": "object", "properties": {}, "additionalProperties": false }
          }
        },
        "Triplydb": {
          "type": "object",
          "title": "Replace a TriplyDB dataset",
          "required": ["triplydb"],
          "properties": {
            "triplydb": { "type": "string", "description": "URL to a TriplyDB dataset" },
            "with": {
              "anyOf": [
                { "$ref": "#/definitions/Options/WithCredentials" },
                { "$ref": "#/definitions/Options/WithOnlyGraphs" },
                { "$ref": "#/definitions/Options/WithIntoGraph" }
              ]
            }
          }
        }
      }
    }
  }
}
