{
  "$id": "https://rdmr.eu/sparql-query-runner/v2-schema.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "sparql-query-runner Configuration Schema v4",
  "type": "object",
  "required": ["version", "pipelines"],
  "properties": {
    "version": {
      "type": "string",
      "pattern": "^v4(\\.\\d)?$",
      "description": "Version of the sparql-query-runner configuration"
    },
    "pipelines": { "$ref": "#/$defs/IPipeline1N" },
    "$schema": {
      "anyOf": [
        {
          "type": "string",
          "const": "https://rdmr.eu/sparql-query-runner/v2-schema.json"
        },
        {
          "type": "object"
        }
      ]
    }
  },
  "$defs": {
    "IPipeline": {
      "type": "object",
      "title": "A pipeline, performing a sequence of SPARQL steps",
      "additionalProperties": false,
      "properties": {
        "name": { "title": "Reference name of the pipeline", "type": "string" },
        "engine": { "title": "Custom configuration options", "type": "object" },
        "independent": {
          "title": "Pipeline does not depend on preceding pipeline",
          "type": "boolean"
        },
        "prefixes": { "$ref": "#/$defs/Prefixes" },
        "sources": { "$ref": "#/$defs/ISource1N" },
        "destinations": { "$ref": "#/$defs/IDest1N" },
        "queries": { "$ref": "#/$defs/IQueryStep1N" },
        "updates": { "$ref": "#/$defs/IUpdateStep1N" },
        "rules": { "$ref": "#/$defs/IRuleStep1N" }
      }
    },
    "IPipeline1N": {
      "anyOf": [
        { "$ref": "#/$defs/IPipeline" },
        {
          "type": "array",
          "items": { "$ref": "#/$defs/IPipeline" }
        }
      ]
    },
    "ISourceOrDest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "url": { "$ref": "#/$defs/URL" },
        "graphs": { "$ref": "#/$defs/URL1N" },
        "authentication": { "$ref": "#/$defs/IAuthentication" },
        "type": {
          "type": "string",
          "default": "auto"
        }
      }
    },
    "ISource": {
      "title": "RDF data source",
      "properties": {
        "type": { "enum": ["file", "msaccess", "sparql", "auto"] }
      },
      "allOf": [{ "$ref": "#/$defs/ISourceOrDest" }]
    },
    "ISourceDirect": {
      "$ref": "#/$defs/ISourceOrDest/properties/url"
    },
    "ISource1N": {
      "anyOf": [
        { "$ref": "#/$defs/ISource" },
        { "$ref": "#/$defs/ISourceDirect" },
        {
          "type": "array",
          "items": { "anyOf": [{ "$ref": "#/$defs/ISource" }, { "$ref": "#/$defs/ISourceDirect" }] }
        }
      ]
    },

    "IDest": {
      "title": "RDF data destination",
      "properties": {
        "type": {
          "enum": ["file", "sparql", "auto", "sparql-graph-store", "sparql-quad-store", "laces"]
        }
      },
      "allOf": [{ "$ref": "#/$defs/ISourceOrDest" }]
    },
    "IDestDirect": {
      "$ref": "#/$defs/ISourceOrDest/properties/url"
    },
    "IDest1N": {
      "anyOf": [
        { "$ref": "#/$defs/IDest" },
        { "$ref": "#/$defs/IDestDirect" },
        {
          "type": "array",
          "items": { "anyOf": [{ "$ref": "#/$defs/IDest" }, { "$ref": "#/$defs/IDestDirect" }] }
        }
      ]
    },

    "URL": {
      "type": "string",
      "format": "iri-reference",
      "description": "A http(s):// remote URL or file: local path"
    },
    "URL1N": {
      "anyOf": [
        { "$ref": "#/$defs/URL" },
        {
          "type": "array",
          "items": { "$ref": "#/$defs/URL" }
        }
      ]
    },

    "IAuthentication": {
      "title": "Method of authentication",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Bearer", "Basic"],
          "title": "Authentication type"
        },
        "token_env": {
          "type": "string",
          "title": "Environment variable name for the Bearer token"
        },
        "user_env": {
          "type": "string",
          "title": "Environment variable name for the HTTP-basic authentication username"
        },
        "password_env": {
          "type": "string",
          "title": "Environment variable name for the HTTP-basic authentication password"
        }
      },
      "required": ["type"],
      "oneOf": [
        {
          "properties": { "type": { "const": "Bearer" } },
          "required": ["type", "token_env"]
        },
        {
          "properties": { "type": { "const": "Basic" } },
          "required": ["type", "user_env", "password_env"]
        }
      ]
    },

    "Prefixes": {
      "title": "Prefixes used to set on the SPARQL endpoint with 'set-prefixes'",
      "type": "object",
      "patternProperties": {
        ".*": {
          "title": "prefix: namespace",
          "type": "string",
          "format": "iri-reference"
        }
      }
    },

    "IBaseStep": {
      "type": "object",
      "title": "Transformation step in the pipeline",
      "properties": {
        "type": { "type": "string" },
        "url": {
          "$ref": "#/$defs/URL1N",
          "title": "URL argument of the step",
          "description": "The `url` value may be an array, e.g. to combine with `graph` in CONSTRUCT queries."
        }
      }
    },
    "IStepDirect": {
      "$ref": "#/$defs/IBaseStep/properties/url"
    },

    "IUpdateStep": {
      "type": "object",
      "properties": {
        "type": { "enum": ["sparql-update", "shacl-validate"] }
      },
      "allOf": [{ "$ref": "#/$defs/IBaseStep" }]
    },
    "IUpdateStep1N": {
      "type": "array",
      "items": {
        "anyOf": [{ "$ref": "#/$defs/IUpdateStep" }, { "$ref": "#/$defs/IStepDirect" }]
      }
    },

    "IQueryStep": {
      "type": "object",
      "properties": {
        "type": { "enum": ["sparql-query", "shacl-validate"] },
        "graph": {
          "title": "Adds a graph to constructed triples.",
          "description": "Empty: defaul graph. SPARQL 1.1 does not allow `GRAPH ?g { ... }` in CONSTRUCT queries.",
          "$ref": "#/$defs/URL"
        }
      },
      "allOf": [{ "$ref": "#/$defs/IBaseStep" }]
    },
    "IQueryStep1N": {
      "type": "array",
      "items": {
        "anyOf": [{ "$ref": "#/$defs/IQueryStep" }, { "$ref": "#/$defs/IStepDirect" }]
      }
    },

    "IRuleStep": {
      "type": "object",
      "properties": {
        "type": { "enum": ["sparql-query"] },
        "targetClass": {
          "title": "Target class of a SHACL SPARQL Rule",
          "description": "When generating SHACL SPARQL Rules, this CURIE/URL value is used to make a targeted SHACL NodeShape.",
          "$ref": "#/$defs/URL1N"
        }
      },
      "allOf": [{ "$ref": "#/$defs/IBaseStep" }]
    },
    "IRuleStep1N": {
      "type": "array",
      "items": {
        "anyOf": [{ "$ref": "#/$defs/IRuleStep" }, { "$ref": "#/$defs/IStepDirect" }]
      }
    }
  }
}
